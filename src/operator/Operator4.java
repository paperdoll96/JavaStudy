package operator;

/* 연산자 우선순위 암기법 */
public class Operator4 {
    // 자바는 아래와 같은 연산자 우선순위가 있다. 처음에 나오는 괄호() 가 우선순위가 가장 높고
    // 마지막의 대입 연산자(=)가 제일 낮다!

/*  1. 괄호 ()
    2. 단항 연산자 (예: ++ , -- , ! , ~ , new , (type) )
    3. 산술 연산자 ( * , / , % 우선, 그 다음에 + , - )
    4. Shift 연산자 ( << , >> , >>> )
    5. 비교 연산자 ( < , <= , > , >= , instanceof )
    6. 등식 연산자 ( == , != )
    7. 비트 연산자 ( & , ^ , | )8. 논리 연산자 ( && , || )
    9. 삼항 연산자 ( ? : )
    10. 대입 연산자 ( = , += , -= , *= , /= , %= 등등) */

    // 그럼 이 많은 우선순위를 다 외워야 할까? 선생님 말씀으로는 실무 개발자들은 연산자 우선순위를 외우지 않는다고 한다! (그러면 자연스럽게 외워지나..?)
    // 연산자 우선순위는 2가지만 기억하면 된다고 한다!

    /* 1. 상식선에서 우선순위를 사용하자
        우선순위는 상식선에서 생각하면 대부분 문제가 없다.
        다음 예를 보자
        int sum = 1 + 2 * 3
        당연히 + 보다 * 이 우선순위가 높다.

        다음으로 산술 연산자( + )와 대입연산자( = )를 비교하는 예를 보자.
        int sum = 1 + 2
        int sum = 3 //산술 연산자가 먼저 처리된다.
        sum = 3 //대입 연산자가 마지막에 처리된다.
        1 + 2 를 먼저 처리한 다음에 그 결과 값을 변수 sum 에 넣어야 한다. 대입 연산자인 = 이 먼저 수행된다고 생각하기가 사실 더 어렵다.*/

    /*
        2. 애매하면 괄호()를 사용하자
        코드를 딱 보았을 때 연산자 우선순위를 고민해야 할 것 같으면, 그러니까 뭔가 복잡해보이면 나 뿐만 아니라 모든 사람
        이 그렇게 느낀다! 이때는 다음과 같이 괄호를 사용해서 우선순위를 명시적으로 지정하면 된다.
        ((2 * 2) + (3 * 3)) / (3 + 2)
     */

    // 정리
    // 1. 연산자 우선순위는 상식선에서 생각하고, 애매하면 괄호 사용!
    // 2. 개발에서 가장 중요한 것은 단순함과 명확함이다! 애매하거나 복잡하면 안돼!
}
